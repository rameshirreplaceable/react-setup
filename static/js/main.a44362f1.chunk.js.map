{"version":3,"sources":["Home.js","ExampleContext/ExampleContext.js","ExampleUseContext/ExampleUseContext.js","ExampleUseEffects/ExampleUseEffects.js","ExampleUseRef/ExampleUseRef.js","ExampleUseState/ExampleUseState.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","Component","ExampleContext","ExampleUseContext","ExampleUseEffects","ExampleUseRef","ExampleUseState","App","className","react_router_dom","activeClassName","to","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a44362f1.chunk.js","sourcesContent":["import React, { Component } from 'react';   \r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n            <p>Home Page</p>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Home;","import React, { Component } from 'react';\r\nclass ExampleContext extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n            <p>ExampleContext</p>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ExampleContext;","import React, { Component } from 'react';\r\nclass ExampleUseContext extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <p>ExampleUseContext</p>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExampleUseContext;","import React, { Component } from 'react';\r\nclass ExampleUseEffects extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <p>ExampleUseEffects</p>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExampleUseEffects;","import React, { Component } from 'react';\r\nclass ExampleUseRef extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <p>ExampleUseRef</p>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExampleUseRef;","import React, { Component } from 'react';\r\nclass ExampleUseState extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <p>ExampleUseState</p>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExampleUseState;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch, NavLink  } from \"react-router-dom\";\nimport './App.scss';\n\nimport Home from './Home'\nimport ExampleContext from './ExampleContext/ExampleContext';\nimport ExampleUseContext from './ExampleUseContext/ExampleUseContext';\nimport ExampleUseEffects from './ExampleUseEffects/ExampleUseEffects';\nimport ExampleUseRef from './ExampleUseRef/ExampleUseRef';\nimport ExampleUseState from './ExampleUseState/ExampleUseState';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Router>\n          <div>\n            <nav className=\"custom-navbar-menu\">\n              <ul>\n                <li>\n                  <NavLink activeClassName=\"active\" to=\"/Home\">Home</NavLink>\n                </li>\n                <li>\n                  <NavLink activeClassName=\"active\" to=\"/examplecontext\">exampleContext</NavLink>\n                </li>\n                <li>\n                  <NavLink activeClassName=\"active\" to=\"/exampleUseContext\">exampleUseContext</NavLink>\n                </li>\n                <li>\n                  <NavLink activeClassName=\"active\" to=\"/exampleUsestate\">exampleUsestate</NavLink>\n                </li>\n                <li>\n                  <NavLink activeClassName=\"active\" to=\"/exampleUseEffects\">exampleUseEffects</NavLink>\n                </li>\n                <li>\n                  <NavLink activeClassName=\"active\" to=\"/exampleUseRef\">exampleUseRef</NavLink>\n                </li>\n              </ul>\n            </nav>\n            <div className=\"card-box\">\n              <Switch>\n                <Route exact path=\"/\" component={Home}></Route>\n                <Route exact path=\"/Home\" component={Home}></Route>\n                <Route path=\"/examplecontext\" component={ExampleContext}></Route>\n                <Route path=\"/exampleUseContext\" component={ExampleUseContext}></Route>\n                <Route path=\"/exampleUsestate\" component={ExampleUseState}></Route>\n                <Route path=\"/exampleUseRef\" component={ExampleUseRef}></Route>\n                <Route path=\"/exampleUseEffects\" component={ExampleUseEffects}></Route>\n                <Route component={Home}></Route>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}